swagger: "2.0"
info:
  description: "Api documentation for FltShr"
  version: "1.0.0"
  title: "FltShr_API"
host: "localhost:81"
schemes:
  - "http"

paths:
  /login:
    post:
      tags:
        - "login"
      summary: "Login endpoint"
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            $ref: "#/definitions/UserLoginDTO"
      consumes:
        - "application/json"

      responses:
        200:
          description: OK
          headers:
            Authorization:
              type: "string"
              description: Bearer Token JWT

  /test/all:
    get:
      tags:
        - "test"
      summary: "Testing public endpoint"
      produces:
        - "text/plain"
      responses:
        200:
          description: OK
          schema:
            type: "string"
  /test/user:
    get:
      tags:
        - "test"
      summary: "Testing endpoint for logged in users"
      produces:
        - "text/plain"
      responses:
        200:
          description: OK
          schema:
            type: "string"
  /test/manager:
    get:
      tags:
        - "test"
      summary: "Testing endpoint for ROLE_MANAGER"
      produces:
        - "text/plain"
      responses:
        200:
          description: OK
          schema:
            type: "string"
  /test/admin:
    get:
      tags:
        - "test"
      summary: "Testing endpoint for ROLE_ADMIN"
      produces:
        - "text/plain"
      responses:
        200:
          description: OK
          schema:
            type: string

  /shopping/lists:
    get:
      tags:
        - shopping
      summary: Get all shopping lists
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ShoppingListDTO"
  /shopping/list:
    post:
      tags:
        - shopping
      summary: Crate new shopping list
      parameters:
        - in: body
          name: ShoppingListDTO
          description: Shopping list to create.
          schema:
            $ref: "#/definitions/ShoppingListDTO"
      responses:
        201:
          description: "Created"
          schema:
            type: object
            $ref: "#/definitions/ShoppingListDTO"
  /shopping/list/{listId}:
    delete:
      tags:
        - shopping
      summary: Delete shopping list
      parameters:
        - name: id
          in: path
          description: Shopping List Id
          type: integer
          required: true
      responses:
        200:
          description: "OK"
  /shopping/items:
    get:
      tags:
        - shopping
      summary: Get all shopping items
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ShoppingItemDTO"

  /shopping/list/{listId}/entries:
    get:
      tags:
        - shopping
      summary: Get all shopping info for list
      parameters:
        - name: id
          in: path
          description: Shopping List Id
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ShoppingEntryDTO"

  /shopping/list/{listId}/item:
    post:
      tags:
        - shopping
      summary: Create shopping info
      description: Assign item for list or create new item if not exist and then assign.
      parameters:
        - name: id
          in: path
          description: Shopping List Id
          type: integer
          required: true
        - in: body
          name: ShoppingListDTO
          description: Shopping item to create in list.
          schema:
            type: object
            $ref: "#/definitions/ShoppingItemDTO"
      responses:
        201:
          description: Created
          schema:
            type: object
            $ref: "#/definitions/ShoppingItemDTO"
  /shopping/list/{listId}/item/{itemId}:
    delete:
      tags:
        - shopping
      summary: Delete shopping info
      parameters:
        - name: listId
          in: path
          description: Shopping List Id
          type: integer
          required: true
        - name: itemId
          in: path
          description: Shopping Item
          type: integer
          required: true
      responses:
        200:
          description: OK
    patch:
      tags:
        - shopping
      summary: Update bought info
      description: Set Item as Bought.
      parameters:
        - name: listId
          in: path
          description: Shopping List Id
          type: integer
          required: true
        - name: itemId
          in: path
          description: Shopping Item
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            type: boolean

definitions:
  ShoppingListDTO:
    type:  object
    properties:
      id:
        type:  integer
      description:
        type:  string

  ShoppingItemDTO:
    type:  object
    properties:
      id:
        type:  integer
      description:
        type:  string

  ShoppingEntryDTO:
    type: object
    properties:
      id:
        type: integer
      shoppingItem:
        $ref: "#/definitions/ShoppingItemDTO"
      user:
        $ref: "#/definitions/UserNameDTO"
      isBought:
        type: boolean

  UserNameDTO:
    type:  object
    properties:
      id:
        type:  integer
      username:
        type:  string

  UserLoginDTO:
    type:  object
    properties:
      username:
        type:  string
      password:
        type:  string

